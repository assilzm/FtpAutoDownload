apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven'


project.ext.set("mavenUrl", "http://10.3.4.240:8082/nexus/")
project.ext.set("mainClassName", "RunUpdate")


group = 'seeyon'
version = '0.1.0'

javadoc {
    options.encoding = "UTF-8"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenLocal()
    maven {
        url project.mavenUrl + "content/groups/public/"
    }
}


sourceSets {
    main {
        groovy.srcDirs = ['src/main/groovy']
        java.srcDirs = []
        resources.srcDirs = []
    }

    test {
        groovy.srcDirs = ['src/test/groovy']
        java.srcDirs = []
        resources.srcDirs = []
    }

    resources {
        groovy.srcDirs = []
        java.srcDirs = []
        resources.srcDirs = ['src/main/resources', 'src/test/resources']
        resources {
            exclude '~*'
        }
    }
}

sourceCompatibility = 1.7
targetCompatibility = 1.7


dependencies {
    compile 'org.codehaus.groovy:groovy:2.4.5'
    compile 'log4j:log4j:1.2.17'
    compile 'junit:junit:4.12'
    compile 'org.hamcrest:hamcrest-all:1.3'
    compile 'commons-net:commons-net:3.5'

}

compileGroovy.dependsOn(clean)


task update(type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
}

task releaseJar(type: Jar) {
    //设置manifest.mf的属性
    manifest {
        attributes 'Implementation-Title': 'M3AutoDonload',
                'Implementation-Version': version,
                'Main-Class': project.mainClassName
    }
    //jar包包名
    baseName = project.name
    //jar包版本
    version=this.version
    //定义Classifier
    classifier="JDK17"
    //jar文件的输出路径，相对位置
    destinationDir=new File("artifacts/")
    //自定义jar包名称，如不自定义会为baseName+version+classifier.jar
    archiveName="${project.name}.jar"

    //from对象接受一个文件路径集合，包含要打包到jar中的文件
    from {
        //从工程编译输出的目录中递归包含所有文件及其路径结构
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    with jar
}